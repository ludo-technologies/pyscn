name: Python Package Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-wheels:
    name: Build wheels
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache: true
    
    - name: Install wheel verification tools
      run: |
        pip install --user twine
    
    - name: Verify Go module
      run: |
        go mod download
        go mod verify
    
    - name: Build multi-platform wheels
      run: |
        python/scripts/build_all_wheels.sh
    
    - name: Verify wheels
      run: |
        python -m twine check dist/*.whl
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wheels
        path: dist/*.whl
        retention-days: 7

  test-wheels:
    name: Test wheels
    needs: build-wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.11']
    
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Download wheels
      uses: actions/download-artifact@v4
      with:
        name: wheels
        path: wheels/
    
    - name: Test wheel installation
      shell: bash
      run: |
        # Find and install the appropriate wheel for this platform
        wheel_count=$(ls wheels/*.whl 2>/dev/null | wc -l)
        if [ $wheel_count -eq 0 ]; then
          echo "No wheels found, skipping test"
          exit 0
        fi
        
        echo "Available wheels:"
        ls -la wheels/
        
        # Try to install any wheel (the Python wrapper will check platform compatibility)
        if pip install wheels/pyqol-*.whl; then
          echo "Testing pyqol command..."
          if pyqol --version; then
            echo "✅ pyqol installation and execution successful!"
          elif pyqol --help >/dev/null 2>&1; then
            echo "✅ pyqol installation successful (version command failed but help works)"
          else
            echo "❌ pyqol command failed"
            exit 1
          fi
        else
          echo "⚠️  Wheel installation failed - likely unsupported platform combination"
        fi

  publish-pypi:
    name: Publish to PyPI
    needs: [build-wheels, test-wheels]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')  # Only on version tags
    
    environment:
      name: pypi
      url: https://pypi.org/p/pyqol
    
    permissions:
      id-token: write  # For trusted publishing
    
    steps:
    - name: Download wheels
      uses: actions/download-artifact@v4
      with:
        name: wheels
        path: dist/
    
    - name: List wheels to publish
      run: ls -la dist/
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages-dir: dist/
        verbose: true

  publish-test-pypi:
    name: Publish to Test PyPI
    needs: [build-wheels, test-wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'  # Only on manual trigger
    
    environment:
      name: testpypi
      url: https://test.pypi.org/p/pyqol
    
    permissions:
      id-token: write  # For trusted publishing
    
    steps:
    - name: Download wheels
      uses: actions/download-artifact@v4
      with:
        name: wheels
        path: dist/
    
    - name: List wheels to publish
      run: ls -la dist/
    
    - name: Publish to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        packages-dir: dist/
        verbose: true

  create-github-release:
    name: Create GitHub Release
    needs: [build-wheels, test-wheels]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download wheels
      uses: actions/download-artifact@v4
      with:
        name: wheels
        path: wheels/
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: wheels/*.whl
        generate_release_notes: true
        draft: false
        prerelease: false